<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spatial data from 2D to 3D</title>
      <link href="/2020/02/25/Spatial-data-from-2D-to-3D/"/>
      <url>/2020/02/25/Spatial-data-from-2D-to-3D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一般来说，我们展示空间数据，如果不是点云数据的话，大多数为二维的。比如说X轴为longitude，Y轴为latitude，那我们是否可以也利用Z轴，在添加一个属性使其，投影到3D中去呢？比如说Z轴为高程，再比如说对于多时间序列的是空间数据，是否可以把Z轴定义为时间轴等等。所以本blog的目的就是来探索一下可行性，需要说明的是：</p><ul><li>空间数据(矢量数据)来自Basemap自带数据集</li><li>其他数据为随机生成，不具有任何实际意义</li><li>基于Python 3.7.6 (Anaconda)</li></ul><h4 id="1-导入必须的modules"><a href="#1-导入必须的modules" class="headerlink" title="1.导入必须的modules"></a>1.导入必须的modules</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> Axes3D<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>basemap <span class="token keyword">import</span> Basemap<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>collections <span class="token keyword">import</span> PolyCollection<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d<span class="token punctuation">.</span>art3d <span class="token keyword">import</span> Poly3DCollection<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> animation<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</code></pre><p>其中<strong>animation</strong>是用来生成最后的gif图片，<strong>Axes3D</strong>和<strong>Poly3DCollection</strong>用于创建3D坐标系和3D的polygon图层的。</p><h4 id="2-数据生成"><a href="#2-数据生成" class="headerlink" title="2.数据生成"></a>2.数据生成</h4><pre class=" language-python"><code class="language-python">lons <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">13.7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10.8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">13.2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">16.8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7.99</span><span class="token punctuation">,</span> <span class="token number">7.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">17.3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>lats <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9.6</span><span class="token punctuation">,</span> <span class="token number">6.3</span><span class="token punctuation">,</span> <span class="token number">8.5</span><span class="token punctuation">,</span> <span class="token number">32.7</span><span class="token punctuation">,</span> <span class="token number">12.5</span><span class="token punctuation">,</span> <span class="token number">8.9</span><span class="token punctuation">,</span> <span class="token number">14.7</span><span class="token punctuation">,</span> <span class="token number">40.39</span><span class="token punctuation">]</span><span class="token punctuation">)</span>points <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>point1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>X <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">]</span>Y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span>Z<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.59</span><span class="token punctuation">,</span><span class="token number">0.59</span><span class="token punctuation">,</span><span class="token number">0.59</span><span class="token punctuation">,</span><span class="token number">0.59</span><span class="token punctuation">]</span>verts <span class="token operator">=</span> <span class="token punctuation">[</span>list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>Z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> map<span class="token punctuation">(</span>lons<span class="token punctuation">,</span> lats<span class="token punctuation">)</span></code></pre><p>我们创建8个点，其中point1投影在X和Y轴所在平面上（即底面），point将point1向Z轴抬高0.6个单位，让其悬浮与Z=0.6的位置，并且在相应位置创建一个polygon,这样更具有立体感。</p><h4 id="3-构造GIF函数"><a href="#3-构造GIF函数" class="headerlink" title="3.构造GIF函数"></a>3.构造GIF函数</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">## for gif</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> fig<span class="token punctuation">,</span> ax<span class="token punctuation">)</span><span class="token punctuation">:</span>    ax<span class="token punctuation">.</span>view_init<span class="token punctuation">(</span>elev<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">,</span> azim<span class="token operator">=</span>i<span class="token punctuation">)</span>    <span class="token keyword">return</span> fig<span class="token punctuation">,</span> ax</code></pre><p>其中参数<em>elev</em>表示沿着Z轴的高度，<em>azim</em>是<em>azimuth</em>的缩写，即为方位角</p><h4 id="4-创建图层"><a href="#4-创建图层" class="headerlink" title="4.创建图层"></a>4.创建图层</h4><pre class=" language-python"><code class="language-python">map <span class="token operator">=</span> Basemap<span class="token punctuation">(</span>llcrnrlon<span class="token operator">=</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span>llcrnrlat<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>urcrnrlon<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>urcrnrlat<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>fix_aspect<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> Axes3D<span class="token punctuation">(</span>fig<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>azim <span class="token operator">=</span> <span class="token number">270</span>ax<span class="token punctuation">.</span>dist <span class="token operator">=</span> <span class="token number">12</span>polys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> polygon <span class="token keyword">in</span> map<span class="token punctuation">.</span>landpolygons<span class="token punctuation">:</span>    polys<span class="token punctuation">.</span>append<span class="token punctuation">(</span>polygon<span class="token punctuation">.</span>get_coords<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lc <span class="token operator">=</span> PolyCollection<span class="token punctuation">(</span>polys<span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span>                    facecolor<span class="token operator">=</span><span class="token string">'#DDDDDD'</span><span class="token punctuation">,</span> closed<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>add_collection3d<span class="token punctuation">(</span>lc<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>add_collection3d<span class="token punctuation">(</span>map<span class="token punctuation">.</span>drawcoastlines<span class="token punctuation">(</span>linewidth<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>add_collection3d<span class="token punctuation">(</span>map<span class="token punctuation">.</span>drawcountries<span class="token punctuation">(</span>linewidth<span class="token operator">=</span><span class="token number">0.35</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lon_step <span class="token operator">=</span> <span class="token number">10</span>lat_step <span class="token operator">=</span> <span class="token number">7</span>parallel_lon <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> lat_step<span class="token punctuation">)</span>parallel_lat <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span>lon_step<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>scatter3D<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> points<span class="token punctuation">,</span> color<span class="token operator">=</span> <span class="token string">'r'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>scatter3D<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> point1<span class="token punctuation">,</span>color<span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>add_collection3d<span class="token punctuation">(</span>Poly3DCollection<span class="token punctuation">(</span>verts<span class="token punctuation">,</span>facecolor <span class="token operator">=</span> <span class="token string">"gray"</span><span class="token punctuation">,</span>alpha <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># label</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'Longitude (°E)'</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'Latitude (°N)'</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_zlabel<span class="token punctuation">(</span><span class="token string">'blabla...'</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span>parallel_lat<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_yticklabels<span class="token punctuation">(</span>parallel_lat<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span>parallel_lon<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xticklabels<span class="token punctuation">(</span>parallel_lon<span class="token punctuation">)</span>anim <span class="token operator">=</span> animation<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> update<span class="token punctuation">,</span> frames<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                 repeat<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> fargs<span class="token operator">=</span><span class="token punctuation">(</span>fig<span class="token punctuation">,</span> ax<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## layout gif</span><span class="token comment" spellcheck="true">## anim.save('Projection.gif', dpi=80, fps=15,writer='imagemagick')</span><span class="token comment" spellcheck="true">##</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>最终得到的是如下的gif:<br><img src="/images/Projection.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Basemap </tag>
            
            <tag> Matplotlib </tag>
            
            <tag> gif </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO 新建博客感想</title>
      <link href="/2020/02/25/HEXO-%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%84%9F%E6%83%B3/"/>
      <url>/2020/02/25/HEXO-%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%84%9F%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="1-什么是HEXO"><a href="#1-什么是HEXO" class="headerlink" title="1.什么是HEXO"></a>1.什么是HEXO</h3><p><strong>HEXO</strong> 是一个利用Markdown渲染的，快速布局博客的框架,在几秒内，即可利用靓丽的主题生成静态网页<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://www.zhihu.com/question/51588481">[1]</span></a></sup>。具体更多的细节请查看<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官网的doc</a>。</p><h3 id="2-配套其他软件"><a href="#2-配套其他软件" class="headerlink" title="2.配套其他软件"></a>2.配套其他软件</h3><p>我们首先需要安装<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a>,再在<strong>Node.js</strong>中利用npm利用<code>$ npm install -g hexo-cli</code>安装blog模块，此时在根目录下会有(比较重要的两个)：</p><ul><li>一个’_config.yml’的属性文件，该文件是定义静态网页的各种属性配置，比如网页的title、subtitle、托管的仓库等等。</li><li>一个theme文件夹，该文件顾名思义主要是存放网页主题的配置文件，比如种链接、背景颜色、各种icon的设置等等。</li></ul><p>然后，我们需要在<a href="https://github.com/" target="_blank" rel="noopener">Github</a>上面注册，然后创建仓库用来托管我们的blog，如何设置仓库及其Key可以参考知乎<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://zhuanlan.zhihu.com/p/26625249">[2]</span></a></sup></p><p>最后我们需要一个网页的模板，并且基于该模板进行魔改，最终得到属于自己的blog。模板的选择，可以参考HEXO的官网<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://hexo.io/themes/">[3]</span></a></sup>。一些logo的选择可以到<a href="https://fontawesome.com/" target="_blank" rel="noopener">fontawesome</a>上面下载，然后本地利用一些软件处理得到自己的logo.</p><h3 id="3-为什么搭建自己博客"><a href="#3-为什么搭建自己博客" class="headerlink" title="3.为什么搭建自己博客"></a>3.为什么搭建自己博客</h3><p>当下有很多可以写文章的网站，比如豆瓣、知乎、简书等, 但是假如有利益冲突，被人家举报，就算你花了很多时间来写东西，你写的东西依然可能被屏蔽。所以基于此最安心的方法是搭建一个自己的博客，自由自在。并且HEXO是用Markdown渲染的，意味着，写作如丝般顺滑。</p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://www.zhihu.com/question/51588481<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://zhuanlan.zhihu.com/p/26625249<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://hexo.io/themes/<a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> Matery </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
