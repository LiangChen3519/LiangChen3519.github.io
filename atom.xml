<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liang Chen&#39;s Blog</title>
  
  <subtitle>田园番茄</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liangchen3519.github.io/"/>
  <updated>2020-02-27T10:12:56.905Z</updated>
  <id>https://liangchen3519.github.io/</id>
  
  <author>
    <name>Liang Chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Forest Ecosystem GPP Modeling</title>
    <link href="https://liangchen3519.github.io/2020/02/26/Forest-Ecosystem-Modeling/"/>
    <id>https://liangchen3519.github.io/2020/02/26/Forest-Ecosystem-Modeling/</id>
    <published>2020-02-26T20:19:43.000Z</published>
    <updated>2020-02-27T10:12:56.905Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>This Blog aims to simply step-by-step replicate (not so strict) the basic results of the paper titled as <em>Developing an empirical model of stand GPP with the LUE model approach: analysis of eddy covriance data at five constrasting conifer sites in Europe</em> $^{[1]}$. Mäkelä’s paper developed a statistical model for daily gross primary production (GPP) in boreal and temperate coniferous forests based on <strong>Light Use Efficiency (LUE)</strong>. So we plan to apply weather dataset to simulate daily Gross Primary Production (GPP) by using Python.</p><p>To make the model easily to understand, we just using the fixed parameters supported by authors in the paper. And the fixed parameters list as follow:</p><table><thead><tr><th align="left">Parameter</th><th align="left">Meaning</th><th align="left">Unit</th><th align="left">Value</th></tr></thead><tbody><tr><td align="left">$\beta$</td><td align="left">Potential daily LUE</td><td align="left"><div style="width: 100pt"> $g \cdot C \cdot m^{-2}$ </div></td><td align="left">0.513</td></tr><tr><td align="left">$\gamma$</td><td align="left">Empirical parameter</td><td align="left">$m^{2}\cdot mol^{-1}$</td><td align="left">0.0196</td></tr><tr><td align="left">$\kappa$</td><td align="left">Empirical parameter</td><td align="left">$kPa^{-1}$</td><td align="left">-0.389</td></tr><tr><td align="left">$\tau $</td><td align="left">Time constant of delay process</td><td align="left">$days$</td><td align="left">7.2</td></tr><tr><td align="left">$X_{0}$</td><td align="left">Shreshold value of the delayed temperature</td><td align="left">$ ^{\circ}C$</td><td align="left">-4</td></tr><tr><td align="left">$S_{max}$</td><td align="left">Empirical parameter</td><td align="left">$ ^{\circ}C$</td><td align="left">17.3</td></tr></tbody></table><p> And the main model is:<br> $$P_{k} = \beta \Phi_{k}\prod_i f_{ik}+\varepsilon_{k} \tag1$$</p><p> Where:</p><p> $P_{k}$ is GPP ($gC\cdot m^{2}\cdot day^{-1}$).</p><p> $\prod_{i} f_{ik}$ for me, means product of the 4 different modifying factors. </p><p> $\varepsilon_{k}$ here, i assumed that, follows the normal distribution.</p><p> $\Theta$ is APAR with unit $mol \cdot m^{-2}$.</p><p>The model is based on <strong>Daily data</strong>, so before we input all variables into model, make sure the time span! Besides, due to input variables include <strong>VPD</strong> and <strong>PAR</strong>, however the weather dataset struct (shows as below:)</p><p><img src="/images/WEATHER_DATA.png" alt=""></p><p> has no such variables, so we have to convert <strong>air pressur</strong> and <strong>air temperature</strong> to <strong>VPD</strong> and <strong>PAR</strong>, respectively.<br>Here we star:</p><h4 id="1-Define-the-constant"><a href="#1-Define-the-constant" class="headerlink" title="1 Define the constant"></a>1 Define the constant</h4><pre class=" language-python"><code class="language-python">Beta <span class="token operator">=</span> <span class="token number">0.513</span>  <span class="token comment" spellcheck="true"># Potential daily LUE</span>Gamma <span class="token operator">=</span> <span class="token number">0.0196</span>  <span class="token comment" spellcheck="true"># Empirical parameter</span>Kappa <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.389</span>  <span class="token comment" spellcheck="true"># Empirical parameter</span>Tau <span class="token operator">=</span> <span class="token number">7.2</span>  <span class="token comment" spellcheck="true"># Time constant of delay process</span>Xo <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">4</span>  <span class="token comment" spellcheck="true"># Shreshold value of the delayed temperature</span>Smax <span class="token operator">=</span> <span class="token number">17.3</span>  <span class="token comment" spellcheck="true"># Empirical parameter</span>k <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.389</span>  <span class="token comment" spellcheck="true"># Empirical parameter</span></code></pre><h4 id="2-Calculation-for-modifying-factors"><a href="#2-Calculation-for-modifying-factors" class="headerlink" title="2 Calculation for modifying factors"></a>2 Calculation for modifying factors</h4><h5 id="2-1-Light-modifier-f-L"><a href="#2-1-Light-modifier-f-L" class="headerlink" title="2.1 Light modifier $f_{L}$"></a>2.1 Light modifier $f_{L}$</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Light_modifer</span><span class="token punctuation">(</span>Phi<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    daily light modifer        Input:            Phi is daily APAR with unit of mol m^-2        Output:            Light modifying factors, range from [0,1]    """</span>    <span class="token keyword">global</span> Gamma    Fl <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>Gamma <span class="token operator">*</span> Phi <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> Fl</code></pre><h5 id="2-2-Temperature-modifier-f-S"><a href="#2-2-Temperature-modifier-f-S" class="headerlink" title="2.2 Temperature modifier $f_{S}$"></a>2.2 Temperature modifier $f_{S}$</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Temperature_modifier</span><span class="token punctuation">(</span>Tair<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> Tau    <span class="token keyword">global</span> Xo    <span class="token keyword">global</span> Smax    X <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    X<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Tair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>Tair<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        Xk <span class="token operator">=</span> X<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> Tau<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Tair<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> X<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        X<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Xk<span class="token punctuation">)</span>    Sk <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token operator">-</span> Xo <span class="token keyword">if</span> x <span class="token operator">-</span> Xo <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> X<span class="token punctuation">]</span>    fs <span class="token operator">=</span> <span class="token punctuation">[</span>s <span class="token operator">/</span> Smax <span class="token keyword">if</span> s <span class="token operator">/</span> Smax <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">1</span> <span class="token keyword">for</span> s <span class="token keyword">in</span> Sk<span class="token punctuation">]</span>    <span class="token keyword">return</span> fs</code></pre><h5 id="2-3-VPD-modifier-f-D"><a href="#2-3-VPD-modifier-f-D" class="headerlink" title="2.3 VPD modifier $f_{D}$"></a>2.3 VPD modifier $f_{D}$</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">VPD_modifier</span><span class="token punctuation">(</span>VPD<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Note: unit for VPD is kPa    """</span>    <span class="token keyword">global</span> k    fd <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>k <span class="token operator">*</span> VPD<span class="token punctuation">)</span>    <span class="token keyword">return</span> fd</code></pre><h5 id="2-4-Soil-water-modifier"><a href="#2-4-Soil-water-modifier" class="headerlink" title="2.4 Soil water modifier"></a>2.4 Soil water modifier</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">SWC_modifier</span><span class="token punctuation">(</span>Theta_wp<span class="token punctuation">,</span> Theta_FC<span class="token punctuation">,</span> SWC<span class="token punctuation">,</span> alpha<span class="token punctuation">,</span> nu<span class="token punctuation">)</span><span class="token punctuation">:</span>    REW <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>x <span class="token operator">-</span> Theta_wp<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>Theta_FC <span class="token operator">+</span> Theta_wp<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> SWC<span class="token punctuation">]</span>    Wk <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">if</span> x <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">1</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> REW<span class="token punctuation">]</span>    fw1 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> pow<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> WK<span class="token punctuation">)</span> <span class="token operator">/</span> alpha<span class="token punctuation">,</span> nu<span class="token punctuation">)</span><span class="token punctuation">)</span>    fw2 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">*</span> alpha <span class="token operator">*</span> pow<span class="token punctuation">(</span>Wk<span class="token punctuation">,</span> nu<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> fw1<span class="token punctuation">,</span> fw2</code></pre><h5 id="2-5-Daily-random-error-varepsilon-k"><a href="#2-5-Daily-random-error-varepsilon-k" class="headerlink" title="2.5 Daily random error $\varepsilon_{k}$"></a>2.5 Daily random error $\varepsilon_{k}$</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Random_error</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    error <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">return</span> error</code></pre><h4 id="3-Final-model"><a href="#3-Final-model" class="headerlink" title="3 Final model"></a>3 Final model</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GPP_estimation</span><span class="token punctuation">(</span>Phi<span class="token punctuation">,</span> VPD<span class="token punctuation">,</span> Tair<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> Beta    e <span class="token operator">=</span> Random_error<span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token keyword">return</span> Beta <span class="token operator">*</span> Phi <span class="token operator">*</span> Light_modifer<span class="token punctuation">(</span>Phi<span class="token punctuation">)</span> <span class="token operator">*</span> Temperature_modifier<span class="token punctuation">(</span>Tair<span class="token punctuation">)</span> <span class="token operator">*</span> VPD_modifier<span class="token punctuation">(</span>VPD<span class="token punctuation">)</span> <span class="token operator">+</span> e</code></pre><p>Final result just as below:</p><p><img src="/images/GPP.gif" alt=""></p><p><strong>Reference:</strong><br>[1]: Mäkelä, Annikki, et al. “Developing an empirical model of stand GPP with the LUE approach: analysis of eddy covariance data at five contrasting conifer sites in Europe.” Global change biology 14.1 (2008): 92-108.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;This Blog aims to simply step-by-step 
      
    
    </summary>
    
    
      <category term="Python" scheme="https://liangchen3519.github.io/categories/Python/"/>
    
    
      <category term="modeling" scheme="https://liangchen3519.github.io/tags/modeling/"/>
    
      <category term="Forest" scheme="https://liangchen3519.github.io/tags/Forest/"/>
    
      <category term="Carbon flux" scheme="https://liangchen3519.github.io/tags/Carbon-flux/"/>
    
  </entry>
  
  <entry>
    <title>Spatial data from 2D to 3D</title>
    <link href="https://liangchen3519.github.io/2020/02/25/Spatial-data-from-2D-to-3D/"/>
    <id>https://liangchen3519.github.io/2020/02/25/Spatial-data-from-2D-to-3D/</id>
    <published>2020-02-25T08:33:04.000Z</published>
    <updated>2020-02-25T09:18:05.427Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一般来说，我们展示空间数据，如果不是点云数据的话，大多数为二维的。比如说X轴为longitude，Y轴为latitude，那我们是否可以也利用Z轴，在添加一个属性使其，投影到3D中去呢？比如说Z轴为高程，再比如说对于多时间序列的是空间数据，是否可以把Z轴定义为时间轴等等。所以本blog的目的就是来探索一下可行性，需要说明的是：</p><ul><li>空间数据(矢量数据)来自Basemap自带数据集</li><li>其他数据为随机生成，不具有任何实际意义</li><li>基于Python 3.7.6 (Anaconda)</li></ul><h4 id="1-导入必须的modules"><a href="#1-导入必须的modules" class="headerlink" title="1.导入必须的modules"></a>1.导入必须的modules</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> Axes3D<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>basemap <span class="token keyword">import</span> Basemap<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>collections <span class="token keyword">import</span> PolyCollection<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d<span class="token punctuation">.</span>art3d <span class="token keyword">import</span> Poly3DCollection<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> animation<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</code></pre><p>其中<strong>animation</strong>是用来生成最后的gif图片，<strong>Axes3D</strong>和<strong>Poly3DCollection</strong>用于创建3D坐标系和3D的polygon图层的。</p><h4 id="2-数据生成"><a href="#2-数据生成" class="headerlink" title="2.数据生成"></a>2.数据生成</h4><pre class=" language-python"><code class="language-python">lons <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">13.7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10.8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">13.2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">16.8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7.99</span><span class="token punctuation">,</span> <span class="token number">7.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">17.3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>lats <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9.6</span><span class="token punctuation">,</span> <span class="token number">6.3</span><span class="token punctuation">,</span> <span class="token number">8.5</span><span class="token punctuation">,</span> <span class="token number">32.7</span><span class="token punctuation">,</span> <span class="token number">12.5</span><span class="token punctuation">,</span> <span class="token number">8.9</span><span class="token punctuation">,</span> <span class="token number">14.7</span><span class="token punctuation">,</span> <span class="token number">40.39</span><span class="token punctuation">]</span><span class="token punctuation">)</span>points <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>point1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>X <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">]</span>Y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span>Z<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.59</span><span class="token punctuation">,</span><span class="token number">0.59</span><span class="token punctuation">,</span><span class="token number">0.59</span><span class="token punctuation">,</span><span class="token number">0.59</span><span class="token punctuation">]</span>verts <span class="token operator">=</span> <span class="token punctuation">[</span>list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>Z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> map<span class="token punctuation">(</span>lons<span class="token punctuation">,</span> lats<span class="token punctuation">)</span></code></pre><p>我们创建8个点，其中point1投影在X和Y轴所在平面上（即底面），point将point1向Z轴抬高0.6个单位，让其悬浮与Z=0.6的位置，并且在相应位置创建一个polygon,这样更具有立体感。</p><h4 id="3-构造GIF函数"><a href="#3-构造GIF函数" class="headerlink" title="3.构造GIF函数"></a>3.构造GIF函数</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">## for gif</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> fig<span class="token punctuation">,</span> ax<span class="token punctuation">)</span><span class="token punctuation">:</span>    ax<span class="token punctuation">.</span>view_init<span class="token punctuation">(</span>elev<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">,</span> azim<span class="token operator">=</span>i<span class="token punctuation">)</span>    <span class="token keyword">return</span> fig<span class="token punctuation">,</span> ax</code></pre><p>其中参数<em>elev</em>表示沿着Z轴的高度，<em>azim</em>是<em>azimuth</em>的缩写，即为方位角</p><h4 id="4-创建图层"><a href="#4-创建图层" class="headerlink" title="4.创建图层"></a>4.创建图层</h4><pre class=" language-python"><code class="language-python">map <span class="token operator">=</span> Basemap<span class="token punctuation">(</span>llcrnrlon<span class="token operator">=</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span>llcrnrlat<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>urcrnrlon<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>urcrnrlat<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>fix_aspect<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> Axes3D<span class="token punctuation">(</span>fig<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>azim <span class="token operator">=</span> <span class="token number">270</span>ax<span class="token punctuation">.</span>dist <span class="token operator">=</span> <span class="token number">12</span>polys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> polygon <span class="token keyword">in</span> map<span class="token punctuation">.</span>landpolygons<span class="token punctuation">:</span>    polys<span class="token punctuation">.</span>append<span class="token punctuation">(</span>polygon<span class="token punctuation">.</span>get_coords<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lc <span class="token operator">=</span> PolyCollection<span class="token punctuation">(</span>polys<span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span>                    facecolor<span class="token operator">=</span><span class="token string">'#DDDDDD'</span><span class="token punctuation">,</span> closed<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>add_collection3d<span class="token punctuation">(</span>lc<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>add_collection3d<span class="token punctuation">(</span>map<span class="token punctuation">.</span>drawcoastlines<span class="token punctuation">(</span>linewidth<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>add_collection3d<span class="token punctuation">(</span>map<span class="token punctuation">.</span>drawcountries<span class="token punctuation">(</span>linewidth<span class="token operator">=</span><span class="token number">0.35</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lon_step <span class="token operator">=</span> <span class="token number">10</span>lat_step <span class="token operator">=</span> <span class="token number">7</span>parallel_lon <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> lat_step<span class="token punctuation">)</span>parallel_lat <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span>lon_step<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>scatter3D<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> points<span class="token punctuation">,</span> color<span class="token operator">=</span> <span class="token string">'r'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>scatter3D<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> point1<span class="token punctuation">,</span>color<span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>add_collection3d<span class="token punctuation">(</span>Poly3DCollection<span class="token punctuation">(</span>verts<span class="token punctuation">,</span>facecolor <span class="token operator">=</span> <span class="token string">"gray"</span><span class="token punctuation">,</span>alpha <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># label</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'Longitude (°E)'</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'Latitude (°N)'</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_zlabel<span class="token punctuation">(</span><span class="token string">'blabla...'</span><span class="token punctuation">,</span> labelpad<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span>parallel_lat<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_yticklabels<span class="token punctuation">(</span>parallel_lat<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span>parallel_lon<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xticklabels<span class="token punctuation">(</span>parallel_lon<span class="token punctuation">)</span>anim <span class="token operator">=</span> animation<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> update<span class="token punctuation">,</span> frames<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                 repeat<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> fargs<span class="token operator">=</span><span class="token punctuation">(</span>fig<span class="token punctuation">,</span> ax<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## layout gif</span><span class="token comment" spellcheck="true">## anim.save('Projection.gif', dpi=80, fps=15,writer='imagemagick')</span><span class="token comment" spellcheck="true">##</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>最终得到的是如下的gif:<br><img src="/images/Projection.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;一般来说，我们展示空间数据，如果不是点云数据的话，大多数为二维的。比如说X轴
      
    
    </summary>
    
    
      <category term="Python" scheme="https://liangchen3519.github.io/categories/Python/"/>
    
    
      <category term="Basemap" scheme="https://liangchen3519.github.io/tags/Basemap/"/>
    
      <category term="Matplotlib" scheme="https://liangchen3519.github.io/tags/Matplotlib/"/>
    
      <category term="gif" scheme="https://liangchen3519.github.io/tags/gif/"/>
    
  </entry>
  
  <entry>
    <title>HEXO 新建博客感想</title>
    <link href="https://liangchen3519.github.io/2020/02/25/HEXO-%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%84%9F%E6%83%B3/"/>
    <id>https://liangchen3519.github.io/2020/02/25/HEXO-%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%84%9F%E6%83%B3/</id>
    <published>2020-02-24T22:15:26.000Z</published>
    <updated>2020-02-25T08:28:51.174Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="1-什么是HEXO"><a href="#1-什么是HEXO" class="headerlink" title="1.什么是HEXO"></a>1.什么是HEXO</h3><p><strong>HEXO</strong> 是一个利用Markdown渲染的，快速布局博客的框架,在几秒内，即可利用靓丽的主题生成静态网页<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://www.zhihu.com/question/51588481">[1]</span></a></sup>。具体更多的细节请查看<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官网的doc</a>。</p><h3 id="2-配套其他软件"><a href="#2-配套其他软件" class="headerlink" title="2.配套其他软件"></a>2.配套其他软件</h3><p>我们首先需要安装<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a>,再在<strong>Node.js</strong>中利用npm利用<code>$ npm install -g hexo-cli</code>安装blog模块，此时在根目录下会有(比较重要的两个)：</p><ul><li>一个’_config.yml’的属性文件，该文件是定义静态网页的各种属性配置，比如网页的title、subtitle、托管的仓库等等。</li><li>一个theme文件夹，该文件顾名思义主要是存放网页主题的配置文件，比如种链接、背景颜色、各种icon的设置等等。</li></ul><p>然后，我们需要在<a href="https://github.com/" target="_blank" rel="noopener">Github</a>上面注册，然后创建仓库用来托管我们的blog，如何设置仓库及其Key可以参考知乎<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://zhuanlan.zhihu.com/p/26625249">[2]</span></a></sup></p><p>最后我们需要一个网页的模板，并且基于该模板进行魔改，最终得到属于自己的blog。模板的选择，可以参考HEXO的官网<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://hexo.io/themes/">[3]</span></a></sup>。一些logo的选择可以到<a href="https://fontawesome.com/" target="_blank" rel="noopener">fontawesome</a>上面下载，然后本地利用一些软件处理得到自己的logo.</p><h3 id="3-为什么搭建自己博客"><a href="#3-为什么搭建自己博客" class="headerlink" title="3.为什么搭建自己博客"></a>3.为什么搭建自己博客</h3><p>当下有很多可以写文章的网站，比如豆瓣、知乎、简书等, 但是假如有利益冲突，被人家举报，就算你花了很多时间来写东西，你写的东西依然可能被屏蔽。所以基于此最安心的方法是搭建一个自己的博客，自由自在。并且HEXO是用Markdown渲染的，意味着，写作如丝般顺滑。</p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://www.zhihu.com/question/51588481<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://zhuanlan.zhihu.com/p/26625249<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://hexo.io/themes/<a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h3 id=&quot;1-什么是HEXO&quot;&gt;&lt;a href=&quot;#1-什么是HEXO&quot; c
      
    
    </summary>
    
    
      <category term="Markdown" scheme="https://liangchen3519.github.io/categories/Markdown/"/>
    
    
      <category term="HEXO" scheme="https://liangchen3519.github.io/tags/HEXO/"/>
    
      <category term="Matery" scheme="https://liangchen3519.github.io/tags/Matery/"/>
    
      <category term="博客" scheme="https://liangchen3519.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
